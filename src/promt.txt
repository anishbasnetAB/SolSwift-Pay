i am making react website where a user can connect wallet, and after connecting the user can send the token to other person from  my website through the connected wallet. The website has 3 input field first one to get receiver public address, 2nd amount and 3rd to select token. I made two component, wallet.jsx has code to connect wallet in website and another file payment.jsx this has form field, and transaction logic but for some reason its not working please help me. here is code for wallet.jsx        import { WalletAdapterNetwork } from '@solana/wallet-adapter-base';
import { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';
import { WalletModalProvider, WalletMultiButton } from '@solana/wallet-adapter-react-ui';
import { clusterApiUrl } from '@solana/web3.js';
import React, { useState, useMemo } from 'react';

import '@solana/wallet-adapter-react-ui/styles.css';
import { GlowWalletAdapter, LedgerWalletAdapter, SolletExtensionWalletAdapter, SolletWalletAdapter, TorusWalletAdapter } from '@solana/wallet-adapter-wallets';

function ConnectWallet({ onConnect }) {
  // The network can be set to 'devnet', 'testnet', or 'mainnet-beta'.
  const network = WalletAdapterNetwork.Devnet;

  // You can also provide a custom RPC endpoint.
  const endpoint = useMemo(() => clusterApiUrl(network), [network]);

  const wallets = useMemo(() => [new GlowWalletAdapter(), new SolletExtensionWalletAdapter(), new SolletWalletAdapter(), new LedgerWalletAdapter(), new TorusWalletAdapter()], [network]);

  const handleConnect = (wallet) => {
    if (wallet) {
      onConnect(wallet);
    }
  };

  return (
    <ConnectionProvider endpoint={endpoint}>
      <WalletProvider wallets={wallets} autoConnect={false}>
        <WalletModalProvider>
          <WalletMultiButton onConnect={handleConnect} />
        </WalletModalProvider>
      </WalletProvider>
    </ConnectionProvider>
  );
}

export default ConnectWallet;
here is code for payment.jsx  
import React, { useState } from 'react';
import { useWallet } from '@solana/wallet-adapter-react';
import ConectWallet from '../solona/wallet';
import { Connection, PublicKey, Transaction, SystemProgram, sendAndConfirmTransaction } from '@solana/web3.js';

const Payment = () => {
  const wallet = useWallet();
  const [receiverAddress, setReceiverAddress] = useState('');
  const [amount, setAmount] = useState('');
  const [selectedToken, setSelectedToken] = useState('');

  const handleFormSubmit = async (event) => {
    event.preventDefault();
    console.log(`Sending ${amount} ${selectedToken} to ${receiverAddress} using wallet ${wallet.publicKey}`);
  
    const connection = new Connection("https://api.devnet.solana.com");
    const publicKey = new PublicKey(receiverAddress);
    const lamports = amount * 10 ** 9; // Convert SOL to lamports
    const transaction = new Transaction().add(
      SystemProgram.transfer({
        fromPubkey: wallet.publicKey,
        toPubkey: publicKey,
        lamports,
      })
    );
  
    // Sign and send the transaction
    const signature = await sendAndConfirmTransaction(
      connection,
      transaction,
      [wallet.payer]
    );
  
    console.log(`Transaction ${signature} confirmed`);
  };

  return (
    <div className='bg-main pt-5 p-md-0' style={{ height: "100vh", display: "flex", justifyContent: "center" }}>
      <div className='p-3 mx-auto text-form' style={{ maxWidth: "800px" }}>
        <div className='pb-5 mt-5'>
          <h1>Make Your Transaction</h1>
        </div>
        <ConectWallet />
        <form className='mt-5' onSubmit={handleFormSubmit}>
          <div className="mb-3">
            <label htmlFor="walletAddress" className="form-label">
              Receiver Wallet Address
            </label>
            <input
              type="text"
              className="form-control"
              id="walletAddress"
              placeholder="Enter wallet address"
              value={receiverAddress}
              onChange={(event) => setReceiverAddress(event.target.value)}
            />
          </div>

          <div className="mb-3">
            <label htmlFor="amount" className="form-label">
              Amount
            </label>
            <input
              type="text"
              className="form-control"
              id="amount"
              placeholder="Enter amount"
              value={amount}
              onChange={(event) => setAmount(event.target.value)}
            />
          </div>

          <div className="mb-3">
            <label htmlFor="tokenSelect" className="form-label">
              Select Token
            </label>
            <select className="form-select" id="tokenSelect" value={selectedToken} onChange={(event) => setSelectedToken(event.target.value)}>
              <option value="">--Please choose an option--</option>
              <option value="SOL">SOL</option>
              <option value="USDC">USDC</option>
              <option value="BTC">BTC</option>
              {/* Add additional token options here */}
            </select>
          </div>
          <button type="submit" className="btn btn-primary">
        Submit
      </button>
    </form>
  </div>
</div>
);
};

export default Payment;